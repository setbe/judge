import '../person.dart';
import '../command.dart';
import '../user_repository.dart';

class BestLeaderboardCommand extends Command {
  @override
  String get name => "–∫—Ä–∞—â—ñ";

  @override
  String get slashName => "highscore";

  @override
  String get description => "–ù–∏–º–∏ –ø–∏—à–∞—î—Ç—å—Å—è –ø–∞—Ä—Ç—ñ—è";

  @override
  int get deleteUserMessageAfterSeconds => 60;

  @override
  int get deleteBotMessageAfterSeconds => 0;

  @override
  Future<String> execute(Person actor, Person? target, Iterable<String> args) async {
    final leaders = await UserRepository.instance.getBestLeaders(limit: 15);

    if (leaders.isEmpty) return "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö.";

    final buffer = StringBuffer("üèÜ –ù–∏–º–∏ –ø–∏—à–∞—î—Ç—å—Å—è –ø–∞—Ä—Ç—ñ—è:\n");
    for (var i = 0; i < leaders.length; i++) {
      final p = leaders[i];
      buffer.writeln("${i + 1}. ${p.name(null)} ‚Äî ${p.socialCreditsStr}");
    }

    return buffer.toString();
  }
}

class WorstLeaderboardCommand extends Command {
  @override
  String get name => "–≥—ñ—Ä—à—ñ";

  @override
  String get slashName => "lowscore";

  @override
  String get description => "–ü–∞—Ä—Ç—ñ—è —Ä–æ–∑—á–∞—Ä–æ–≤–∞–Ω–∞ –Ω–∏–º–∏";

  @override
  int get deleteUserMessageAfterSeconds => 60;

  @override
  int get deleteBotMessageAfterSeconds => 0;

  @override
  Future<String> execute(Person actor, Person? target, Iterable<String> args) async {
    final leaders = await UserRepository.instance.getWorstLeaders(limit: 15);

    if (leaders.isEmpty) return "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö.";

    final buffer = StringBuffer("‚¨áÔ∏èüëé –ü–∞—Ä—Ç—ñ—è —Ä–æ–∑—á–∞—Ä–æ–≤–∞–Ω–∞ –Ω–∏–º–∏:\n");
    for (var i = 0; i < leaders.length; i++) {
      final p = leaders[i];
      buffer.writeln("${i + 1}. ${p.name(null)} ‚Äî ${p.socialCreditsStr}");
    }

    return buffer.toString();
  }
}